@inproceedings{Golab:2003:IFI:948205.948227,
 author = {Golab, Lukasz and DeHaan, David and Demaine, Erik D. and Lopez-Ortiz, Alejandro and Munro, J. Ian},
 title = {Identifying Frequent Items in Sliding Windows over On-line Packet Streams},
 booktitle = {Proceedings of the 3rd ACM SIGCOMM Conference on Internet Measurement},
 series = {IMC '03},
 year = {2003},
 isbn = {1-58113-773-7},
 location = {Miami Beach, FL, USA},
 pages = {173--178},
 numpages = {6},
 url = {http://doi.acm.org/10.1145/948205.948227},
 doi = {10.1145/948205.948227},
 acmid = {948227},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {frequent item queries, internet traffic monitoring, on-line stream analysis, sliding windows},
}

@inproceedings{Demaine:2002:FEI:647912.740658,
 author = {Demaine, Erik D. and L\'{o}pez-Ortiz, Alejandro and Munro, J. Ian},
 title = {Frequency Estimation of Internet Packet Streams with Limited Space},
 booktitle = {Proceedings of the 10th Annual European Symposium on Algorithms},
 series = {ESA '02},
 year = {2002},
 isbn = {3-540-44180-8},
 pages = {348--360},
 numpages = {13},
 url = {http://dl.acm.org/citation.cfm?id=647912.740658},
 acmid = {740658},
 publisher = {Springer-Verlag},
 address = {London, UK, UK},
} 


@inproceedings{Yi:2009:OTD:1559795.1559820,
 author = {Yi, Ke and Zhang, Qin},
 title = {Optimal Tracking of Distributed Heavy Hitters and Quantiles},
 booktitle = {Proceedings of the Twenty-eighth ACM SIGMOD-SIGACT-SIGART Symposium on Principles of Database Systems},
 series = {PODS '09},
 year = {2009},
 isbn = {978-1-60558-553-6},
 location = {Providence, Rhode Island, USA},
 pages = {167--174},
 numpages = {8},
 url = {http://doi.acm.org/10.1145/1559795.1559820},
 doi = {10.1145/1559795.1559820},
 acmid = {1559820},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {distributed tracking, heavy hitter, quantile},
}

@techreport{rivetti:hal-01073877,
  TITLE = {{Efficiently Summarizing Distributed Data Streams over Sliding Windows}},
  AUTHOR = {Rivetti, Nicol{\`o} and Busnel, Yann and Mostefaoui, Achour},
  URL = {https://hal.archives-ouvertes.fr/hal-01073877},
  NOTE = {19 pages},
  YEAR = {2014},
  MONTH = Oct,
  KEYWORDS = {Data stream ; windowing model ; frequency estimation ; randomized approximation algorithm},
  HAL_ID = {hal-01073877},
  HAL_VERSION = {v1},
}

@inproceedings{Chan:2012:STACS,
 author = {Ho-Leung Chan and Tak-Wah Lam and Lap-Kei Lee and Hing-Fung Ting},
 title = {Continuous monitoring of distributed data streams over a time-based sliding window.},
 booktitle = {Proceedings of the 27th International Symposium on Theoretical Aspects of Computer Science},
 series = {STACS'10},
 year = {2010},
}

@inproceedings{Cormode:2012:TDA:2352446.2352482,
 author = {Cormode, Graham and Yi, Ke},
 title = {Tracking Distributed Aggregates over Time-based Sliding Windows},
 booktitle = {Proceedings of the 24th International Conference on Scientific and Statistical Database Management},
 series = {SSDBM'12},
 year = {2012},
 isbn = {978-3-642-31234-2},
 location = {Chania, Crete, Greece},
 pages = {416--430},
 numpages = {15},
 url = {http://dx.doi.org/10.1007/978-3-642-31235-9_28},
 doi = {10.1007/978-3-642-31235-9_28},
 acmid = {2352482},
 publisher = {Springer-Verlag},
 address = {Berlin, Heidelberg},
}

@inproceedings{Chan:2009:AFI,
 author = {Chan, Ho-Leung and Lam, Tak-Wah and Lee, Lap-Kei and Ting, Hing-Fung},
 title = {Approximating Frequent Items in Asynchronous Data Stream over a Sliding Window},
 booktitle = {Proceedings of the 7th International Conference on Approximation and Online Algorithms},
 series = {WAOA'09},
 year = {2010},
 isbn = {3-642-12449-6, 978-3-642-12449-5},
 location = {Copenhagen, Denmark},
 pages = {49--61},
 numpages = {13},
 url = {http://dx.doi.org/10.1007/978-3-642-12450-1_5},
 doi = {10.1007/978-3-642-12450-1_5},
 acmid = {2163409},
 publisher = {Springer-Verlag},
 address = {Berlin, Heidelberg},
}

@inproceedings{ThanhLam:2010:MTF:1835804.1835842,
 author = {Thanh Lam, Hoang and Calders, Toon},
 title = {Mining Top-k Frequent Items in a Data Stream with Flexible Sliding Windows},
 booktitle = {Proceedings of the 16th ACM SIGKDD International Conference on Knowledge Discovery and Data Mining},
 series = {KDD '10},
 year = {2010},
 isbn = {978-1-4503-0055-1},
 location = {Washington, DC, USA},
 pages = {283--292},
 numpages = {10},
 url = {http://doi.acm.org/10.1145/1835804.1835842},
 doi = {10.1145/1835804.1835842},
 acmid = {1835842},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {data stream mining, top-k frequent items},
 abstract = {We study the problem of finding the k most frequent items in a stream of items for the recently proposed max-frequency measure. Based on the properties of an item, the max- frequency of an item is counted over a sliding window of which the length changes dynamically. Besides being pa- rameterless, this way of measuring the support of items was shown to have the advantage of a faster detection of bursts in a stream, especially if the set of items is heterogeneous. The algorithm that was proposed for maintaining all frequent items, however, scales poorly when the number of items be- comes large. Therefore, in this paper we propose, instead of reporting all frequent items, to only mine the top-k most frequent ones. First we prove that in order to solve this problem exactly, we still need a prohibitive amount of mem- ory (at least linear in the number of items). Yet, under some reasonable conditions, we show both theoretically and empirically that a memory-efficient algorithm exists. A pro- totype of this algorithm is implemented and we present its performance w.r.t. memory-efficiency on real-life data and in controlled experiments with synthetic data}
}

@inproceedings{Calders:2007:MFI:1441428.1442060,
 author = {Calders, Toon and Dexters, Nele and Goethals, Bart},
 title = {Mining Frequent Itemsets in a Stream},
 booktitle = {Proceedings of the 2007 Seventh IEEE International Conference on Data Mining},
 series = {ICDM '07},
 year = {2007},
 isbn = {0-7695-3018-4},
 pages = {83--92},
 numpages = {10},
 url = {http://dx.doi.org/10.1109/ICDM.2007.66},
 doi = {10.1109/ICDM.2007.66},
 acmid = {1442060},
 publisher = {IEEE Computer Society},
 address = {Washington, DC, USA},
 abstract = {We study the problem of finding frequent itemsets in a continuous stream of transactions. The current frequency of an itemset in a stream is defined as its maximal frequency over all possible windows in the stream from any point in the past until the current state that satisfy a minimal length constraint. Properties of this new measure are studied and an incremental algorithm that allows, at any time, to immediately produce the current frequencies of all frequent itemsets is proposed. Experimental and theoretical analysis show that the space requirements for the algorithm are extremely small for many realistic data distributions.}
}

@article{chi-wing-wong:JDMKD:2006,
 author = {Raymond Chi-Wing Wong and Ada Wai-Chee Fu},
 title = {Mining Top-K Frequent Itemset from Data Streams},
 journal = {Journal of Data Mining and Knowledge Discovery},
 volume = {13},
 number = {2},
 year = {2006},
 pages = {193--217},
 doi = {10.1007/s10618-006-0042-x}
}

@article{Papapetrou:2012:SQD:2336664.2336672,
 author = {Papapetrou, Odysseas and Garofalakis, Minos and Deligiannakis, Antonios},
 title = {Sketch-based Querying of Distributed Sliding-window Data Streams},
 journal = {Proc. VLDB Endow.},
 issue_date = {June 2012},
 volume = {5},
 number = {10},
 month = jun,
 year = {2012},
 issn = {2150-8097},
 pages = {992--1003},
 numpages = {12},
 url = {http://dx.doi.org/10.14778/2336664.2336672},
 doi = {10.14778/2336664.2336672},
 acmid = {2336672},
 publisher = {VLDB Endowment},
}

@article{Vitter1985Random-sampling,
Author = {Vitter, Jeffrey S.},
Date-Added = {2010-10-01 15:58:42 +0200},
Date-Modified = {2010-10-01 15:58:42 +0200},
Issn = {0098-3500},
Journal = {ACM Transactions on Mathematical Software},
Number = {1},
Title = {Random sampling with a reservoir},
Volume = {11},
Year = {1985}
}

@inproceedings{Manjhi:2005:FFI:1053724.1054115,
 author = {Manjhi, Amit and Shkapenyuk, Vladislav and Dhamdhere, Kedar and Olston, Christopher},
 title = {Finding (Recently) Frequent Items in Distributed Data Streams},
 booktitle = {Proceedings of the 21st International Conference on Data Engineering},
 series = {ICDE '05},
 year = {2005},
 isbn = {0-7695-2285-8},
 pages = {767--778},
 numpages = {12},
 url = {http://dx.doi.org/10.1109/ICDE.2005.68},
 doi = {10.1109/ICDE.2005.68},
 acmid = {1054115},
 publisher = {IEEE Computer Society},
 address = {Washington, DC, USA},
}

@inproceedings{Bhatotia2014Slider:-Increme,
	Address = {New York, NY, USA},
	Author = {Bhatotia, Pramod and Acar, Umut A. and Junqueira, Flavio P. and Rodrigues, Rodrigo},
	Booktitle = {Proceedings of the 15th International Middleware Conference},
	Pages = {61--72},
	Publisher = {ACM},
	Series = {Middleware '14},
	Title = {Slider: Incremental Sliding Window Analytics},
	Year = {2014}}

@inproceedings{Babcock:2003:DTM:872757.872764,
     Address = {New York, NY, USA},
     Author = {Babcock, Brian and Olston, Chris},
     Booktitle = {Proceedings of the 2003 ACM SIGMOD international conference on Management of data},
     Pages = {28--39},
     Publisher = {ACM},
     Series = {SIGMOD '03},
     Title = {Distributed top-k monitoring},
     Year = {2003}}


@inproceedings{lahiri2008computing,
     Author = {Lahiri, B. and Tirthapura, S.},
     Booktitle = {Structural information and communication complexity: 15th international colloquium, SIROCCO 2008, Villars-sur-Ollon, Switzerland, June 17-20, 2008: proceedings},
     Organization = {Springer-Verlag New York Inc},
     Pages = {119},
     Title = {Computing Frequent Elements Using Gossip},
     Year = {2008}}


@inproceedings{golab2003identifying,
     Author = {Golab, L. and DeHaan, D. and Demaine, E.D. and Lopez-Ortiz, A. and Munro, J.I.},
     Booktitle = {Proceedings of the 3rd ACM SIGCOMM conference on Internet measurement},
     Organization = {ACM},
     Pages = {173--178},
     Title = {Identifying frequent items in sliding windows over on-line packet streams},
     Year = {2003}}


@inproceedings{babcock2002sampling,
     Author = {Babcock, B. and Datar, M. and Motwani, R.},
     Booktitle = {Proceedings of the thirteenth annual ACM-SIAM symposium on Discrete algorithms},
     Organization = {Society for Industrial and Applied Mathematics},
     Pages = {633--634},
     Title = {Sampling from a moving window over streaming data},
     Year = {2002}}


@article{jin2008sliding,
     Author = {Jin, C. and Yi, K. and Chen, L. and Yu, J.X. and Lin, X.},
     Journal = {Proceedings of the VLDB Endowment},
     Number = {1},
     Pages = {301--312},
     Title = {Sliding-window top-k queries on uncertain streams},
     Volume = {1},
     Year = {2008}}

@inproceedings{theobald2004top,
     Author = {Theobald, M. and Weikum, G. and Schenkel, R.},
     Booktitle = {Proceedings of the 30th international conference on Very large data bases-Volume 30},
     Organization = {VLDB Endowment},
     Pages = {648--659},
     Title = {Top-k query evaluation with probabilistic guarantees},
     Year = {2004}}

@inproceedings{liu2012continuous,
  title={Continuous distributed counting for non-monotonic streams},
  author={Liu, Zhenming and Radunovi{\'c}, Bozidar and Vojnovi{\'c}, Milan},
  booktitle={Proceedings of the 31st symposium on Principles of Database Systems},
  pages={307--318},
  year={2012},
  organization={ACM}
} 

@article{arlitt2000workload,
  title={A workload characterization study of the 1998 world cup web site},
  author={Arlitt, Martin and Jin, Tai},
  journal={Network, IEEE},
  volume={14},
  number={3},
  pages={30--37},
  year={2000},
  publisher={IEEE}
}

@article{Ilyas2008,
 author = {Ilyas, Ihab F. and Beskales, George and Soliman, Mohamed A.},
 title = {A Survey of Top-k Query Processing Techniques in Relational Database Systems},
 journal = {ACM Comput. Surv.},
 issue_date = {October 2008},
 volume = {40},
 number = {4},
 month = oct,
 year = {2008},
 issn = {0360-0300},
 pages = {11:1--11:58},
 articleno = {11},
 numpages = {58},
 url = {http://doi.acm.org/10.1145/1391729.1391730},
 doi = {10.1145/1391729.1391730},
 acmid = {1391730},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {Top-k, rank aggregation, rank-aware processing, voting},
}

@article{Cormode:2005:IDS:1073713.1073718,
 author = {Cormode, Graham and Muthukrishnan, S.},
 title = {An Improved Data Stream Summary: The Count-min Sketch and Its Applications},
 journal = {J. Algorithms},
 issue_date = {April 2005},
 volume = {55},
 number = {1},
 month = apr,
 year = {2005},
 issn = {0196-6774},
 pages = {58--75},
 numpages = {18},
 url = {http://dx.doi.org/10.1016/j.jalgor.2003.12.001},
 doi = {10.1016/j.jalgor.2003.12.001},
 acmid = {1073718},
 publisher = {Academic Press, Inc.},
 address = {Duluth, MN, USA},
}

@article{MisraGries1982,
 author = {Jayadev Misra and David Gries},
 title = {Finding repeated elements},
 journal = {Sci. Comput. Program.},
 volume = {2},
 number = {2},
 year = {1982},
 pages = {143--152}
}

@inproceedings{Kuka:2014:QMS:2611286.2611292,
 author = {Kuka, Christian and Nicklas, Daniela},
 title = {Quality Matters: Supporting Quality-aware Pervasive Applications by Probabilistic Data Stream Management},
 booktitle = {Proceedings of the 8th ACM International Conference on Distributed Event-Based Systems},
 series = {DEBS '14},
 year = {2014},
 isbn = {978-1-4503-2737-4},
 location = {Mumbai, India},
 pages = {1--12},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/2611286.2611292},
 doi = {10.1145/2611286.2611292},
 acmid = {2611292},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {context-aware services, data stream processing, probabilistic data stream processing},
abstract = {Many pervasive computing applications need sensor data streams, which can vary significantly in accuracy. Depending on the application, deriving information (e.g., higher-level context) from low-quality sensor data might lead to wrong decisions or even critical situations. Thus, it is important to control the quality throughout the whole data stream processing, from the raw sensor data up to the derived information, e.g., a complex event. In this paper, we present a uniform meta data model to represent sensor data and information quality at all levels of processing; we show how this meta data model can be integrated in a data stream processing engine to ease the development of quality-aware applications; and we present an approach to learn probability distributions of incoming sensor data which needs no prior knowledge. We demonstrate and evaluate our approach in a real-world scenario.}
} 

@inproceedings{Tudoran:2014:JEH:2611286.2611298,
 author = {Tudoran, Radu and Nano, Olivier and Santos, Ivo and Costan, Alexandru and Soncu, Hakan and Boug{\'e}, Luc and Antoniu, Gabriel},
 title = {JetStream: Enabling High Performance Event Streaming Across Cloud Data-centers},
 booktitle = {Proceedings of the 8th ACM International Conference on Distributed Event-Based Systems},
 series = {DEBS '14},
 year = {2014},
 isbn = {978-1-4503-2737-4},
 location = {Mumbai, India},
 pages = {23--34},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/2611286.2611298},
 doi = {10.1145/2611286.2611298},
 acmid = {2611298},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {cloud computing, event streaming, high performance data management, multi data-centers},
 abstract = {The easily-accessible computation power offered by cloud infrastructures coupled with the revolution of Big Data are expanding the scale and speed at which data analysis is performed. In their quest for finding the Value in the 3 Vs of Big Data, applications process larger data sets, within and across clouds. Enabling fast data transfers across geographically distributed sites becomes particularly important for applications which manage continuous streams of events in real time. Scientific applications (e.g. the Ocean Observatory Initiative or the ATLAS experiment) as well as commercial ones (e.g. Microsoft's Bing and Office 365 large-scale services) operate on tens of data-centers around the globe and follow similar patterns: they aggregate monitoring data, assess the QoS or run global data mining queries based on inter site event stream processing. In this paper, we propose a set of strategies for efficient transfers of events between cloud data-centers and we introduce JetStream: a prototype implementing these strategies as a high performance batch-based streaming middleware. JetStream is able to self-adapt to the streaming conditions by modeling and monitoring a set of context parameters. It further aggregates the available bandwidth by enabling multi-route streaming across cloud sites. The prototype was validated on tens of nodes from US and Europe data-centers of the Windows Azure cloud using synthetic benchmarks and with application code from the context of the Alice experiment at CERN. The results show an increase in transfer rate of 250 times over individual event streaming. Besides, introducing an adaptive transfer strategy brings an additional 25% gain. Finally, the transfer rate can further be tripled thanks to the use of multi-route streaming.}
} 

@inproceedings{Weigert:2011:CAN:2208488.2208508,
 author = {Weigert, Stefan and Hiltunen, Matti A. and Fetzer, Christof},
 title = {Community-based Analysis of Netflow for Early Detection of Security Incidents},
 booktitle = {Proceedings of the 25th International Conference on Large Installation System Administration},
 series = {LISA'11},
 year = {2011},
 location = {Boston, MA},
 url = {http://dl.acm.org/citation.cfm?id=2208488.2208508},
 acmid = {2208508},
 publisher = {USENIX Association},
 address = {Berkeley, CA, USA},
}

@inproceedings{Lahiri:2011:STP:2002259.2002294,
 author = {Lahiri, Bibudh and Chandrashekar, Jaideep and Tirthapura, Srikanta},
 title = {Space-efficient Tracking of Persistent Items in a Massive Data Stream},
 booktitle = {Proceedings of the 5th ACM International Conference on Distributed Event-based System},
 series = {DEBS '11},
 year = {2011},
 isbn = {978-1-4503-0423-8},
 location = {New York, New York, USA},
 pages = {255--266},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/2002259.2002294},
 doi = {10.1145/2002259.2002294},
 acmid = {2002294},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {data streams, persistence, sketches},
}

@inproceedings{Cao:2004:ETQ:1011767.1011798,
 author = {Cao, Pei and Wang, Zhe},
 title = {Efficient top-K Query Calculation in Distributed Networks},
 booktitle = {Proceedings of the Twenty-third Annual ACM Symposium on Principles of Distributed Computing},
 series = {PODC '04},
 year = {2004},
 isbn = {1-58113-802-4},
 location = {St. John's, Newfoundland, Canada},
 pages = {206--215},
 numpages = {10},
 url = {http://doi.acm.org/10.1145/1011767.1011798},
 doi = {10.1145/1011767.1011798},
 acmid = {1011798},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {distributed networks, instance optimality, top-k algorithms},
}

@inproceedings{loom_hotcloud14,
author = {William Culhane and Kirill Kogan and Chamikara Jayalath and Patrick Eugster},
title = {LOOM: Optimal Aggregation Overlays for In-Memory Big Data Processing},
booktitle = {6th USENIX Workshop on Hot Topics in Cloud Computing (HotCloud 14)},
year = {2014},
month = Jun,
address = {Philadelphia, PA},
url = {https://www.usenix.org/conference/hotcloud14/workshop-program/presentation/culhane},
publisher = {USENIX Association},
}

@inproceedings{Wang:2011:CPR:2002259.2002296,
 author = {Wang, Xinxin and Candan, K. Sel\c{c}uk and Song, Junehwa},
 title = {Complex Pattern Ranking (CPR): Evaluating Top-k Pattern Queries over Event Streams},
 booktitle = {Proceedings of the 5th ACM International Conference on Distributed Event-based System},
 series = {DEBS '11},
 year = {2011},
 isbn = {978-1-4503-0423-8},
 location = {New York, New York, USA},
 pages = {279--290},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/2002259.2002296},
 doi = {10.1145/2002259.2002296},
 acmid = {2002296},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {complex event processing, pattern ranking, topk query},
}

@inproceedings{Fagin:1996:CFI:237661.237715,
 author = {Fagin, Ronald},
 title = {Combining Fuzzy Information from Multiple Systems (Extended Abstract)},
 booktitle = {Proceedings of the Fifteenth ACM SIGACT-SIGMOD-SIGART Symposium on Principles of Database Systems},
 series = {PODS '96},
 year = {1996},
 isbn = {0-89791-781-2},
 location = {Montreal, Quebec, Canada},
 pages = {216--226},
 numpages = {11},
 url = {http://doi.acm.org/10.1145/237661.237715},
 doi = {10.1145/237661.237715},
 acmid = {237715},
 publisher = {ACM},
 address = {New York, NY, USA},
} 

@article{Marian:2004:ETK:1005566.1005569,
 author = {Marian, Am{\'e}lie and Bruno, Nicolas and Gravano, Luis},
 title = {Evaluating Top-k Queries over Web-accessible Databases},
 journal = {ACM Trans. Database Syst.},
 issue_date = {June 2004},
 volume = {29},
 number = {2},
 month = jun,
 year = {2004},
 issn = {0362-5915},
 pages = {319--362},
 numpages = {44},
 url = {http://doi.acm.org/10.1145/1005566.1005569},
 doi = {10.1145/1005566.1005569},
 acmid = {1005569},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {Parallel query processing, query optimization, top-k query processing, web databases.},
} 

@article{Bruno:2002:TKS:568518.568519,
 author = {Bruno, Nicolas and Chaudhuri, Surajit and Gravano, Luis},
 title = {Top-k Selection Queries over Relational Databases: Mapping Strategies and Performance Evaluation},
 journal = {ACM Trans. Database Syst.},
 issue_date = {June 2002},
 volume = {27},
 number = {2},
 month = jun,
 year = {2002},
 issn = {0362-5915},
 pages = {153--187},
 numpages = {35},
 url = {http://doi.acm.org/10.1145/568518.568519},
 doi = {10.1145/568518.568519},
 acmid = {568519},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {Multidimensional histograms, top-k query processing},
}

@inproceedings{2001:TEM:876870.878237,
 author = {Guntzer, J. and Balke, W.-T. and Kiessling, W.},
 title = {Towards Efficient Multi-Feature Queries in Heterogeneous Environments},
 booktitle = {Proceedings of the International Conference on Information Technology: Coding and Computing},
 series = {ITCC '01},
 year = {2001},
 isbn = {0-7695-1062-0},
 pages = {622--},
 url = {http://dl.acm.org/citation.cfm?id=876870.878237},
 acmid = {878237},
 publisher = {IEEE Computer Society},
 address = {Washington, DC, USA},
key = {{$\!\!$}} ,
} 


@inproceedings{Theobald:2004:TQE:1316689.1316746,
 author = {Theobald, Martin and Weikum, Gerhard and Schenkel, Ralf},
 title = {Top-k Query Evaluation with Probabilistic Guarantees},
 booktitle = {Proceedings of the Thirtieth International Conference on Very Large Data Bases - Volume 30},
 series = {VLDB '04},
 year = {2004},
 isbn = {0-12-088469-0},
 location = {Toronto, Canada},
 pages = {648--659},
 numpages = {12},
 url = {http://dl.acm.org/citation.cfm?id=1316689.1316746},
 acmid = {1316746},
 publisher = {VLDB Endowment},
} 


@inproceedings{Fagin:2001:OAA:375551.375567,
 author = {Fagin, Ronald and Lotem, Amnon and Naor, Moni},
 title = {Optimal Aggregation Algorithms for Middleware},
 booktitle = {Proceedings of the Twentieth ACM SIGMOD-SIGACT-SIGART Symposium on Principles of Database Systems},
 series = {PODS '01},
 year = {2001},
 isbn = {1-58113-361-8},
 location = {Santa Barbara, California, USA},
 pages = {102--113},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/375551.375567},
 doi = {10.1145/375551.375567},
 acmid = {375567},
 publisher = {ACM},
 address = {New York, NY, USA},
} 


@article{Michel2005,
abstract = {This paper addresses the efficient processing of top-k queries in wide-area distributed data repositories where the index lists for the attribute values (or text terms) of a query are distributed across a number of data peers and the computational costs include network latency, bandwidth consumption, and local peer work. We present KLEE, a novel algorithmic framework for distributed top-k queries, designed for high performance and flexibility. KLEE makes a strong case for approximate top-k algorithms over widely distributed data sources. It shows how great gains in efficiency can be enjoyed at low result-quality penalties. Further, KLEE affords the query-initiating peer the flexibility to trade-off result quality and expected performance and to trade-off the number of communication phases engaged during query execution versus network bandwidth performance. We have implemented KLEE and related algorithms and conducted a comprehensive performance evaluation. Our evaluation employed real-world and synthetic large, web-data collections, and query benchmarks. Our experimental results show that KLEE can achieve major performance gains in terms of network bandwidth, query response times, and much lighter peer loads, all with small errors in result precision and other result-quality measures.},
author = {Michel, Sebastian and Triantafillou, Peter and Weikum, Gerhard},
isbn = {1595931546},
journal = {VLDB '05 - Proceedings of the 31st VLDB conference},
pages = {637--648},
title = {{KLEE : A Framework for Distributed Top-k Query Algorithms}},
url = {netcins.ceid.upatras.gr/papers/Klee\_VLDB.pdf$\backslash$ndl.acm.org/citation.cfm?id=1083667},
year = {2005}
}


@inproceedings{Ryeng2011,
abstract = {Recently, there has been an increased interest in incorporating in database management systems rank-aware query operators, such as top-k queries, that allow users to retrieve only the most interesting data objects. In this paper, we propose a cache-based approach for efficiently supporting top-k queries in distributed database management systems. In large distributed systems, the query performance depends mainly on the network cost, measured as the number of tuples transmitted over the network. Ideally, only the k tuples that belong to the query result set should be transmitted. Nevertheless, a server cannot decide based only on its local data which tuples belong to the result set. Therefore, in this paper, we use caching of previous results to reduce the number of tuples that must be fetched over the network. To this end, our approach always delivers as many tuples as possible from cache and constructs a remainder query to fetch the remaining tuples. This is different from the existing distributed approaches that need to re-execute the entire top-k query when the cached entries are not sufficient to provide the result set. We demonstrate the feasibility and efficiency of our approach through implementation in a distributed database management system. © 2011 Springer-Verlag.},
author = {Ryeng, Norvald H. and Vlachou, Akrivi and Doulkeridis, Christos and N\o rv\aa g, Kjetil},
booktitle = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
doi = {10.1007/978-3-642-20152-3\_21},
isbn = {9783642201516},
issn = {03029743},
pages = {280--295},
title = {{Efficient distributed top-k query processing with caching}},
volume = {6588 LNCS},
year = {2011}
}
@article{Babcock2003,
abstract = {The querying and analysis of data streams has been a topic of much recent interest, motivated by applications from the fields of networking, web usage analysis, sensor instrumentation, telecommunications, and others. Many of these applications involve monitoring answers to continuous queries over data streams produced at physically distributed locations, and most previous approaches require streams to be transmitted to a single location for centralized processing. Unfortunately, the continual transmission of a large number of rapid data streams to a central location can be impractical or expensive. We study a useful class of queries that continuously report the k largest values obtained from distributed data streams ("top-k monitoring queries"), which are of particular interest because they can be used to reduce the overhead incurred while running other types of monitoring queries. We show that transmitting entire data streams is unnecessary to support these queries and present an alternative approach that reduces communication significantly. In our approach, arithmetic constraints are maintained at remote stream sources to ensure that the most recently provided top-k answer remains valid to within a user-specified error tolerance. Distributed communication is only necessary on occasion, when constraints are violated, and we show empirically through extensive simulation on real-world data that our approach reduces overall communication cost by an order of magnitude compared with alternatives that o er the same error guarantees.},
author = {Babcock, Brian and Olston, Chris},
doi = {10.1145/872763.872764},
isbn = {158113634X},
issn = {07308078},
journal = {SIGMOD '03 - Proceedings of the 2003 ACM SIGMOD international conference on on Management of data},
pages = {28 -- 39},
title = {{Distributed top-k monitoring}},
url = {http://www.cs.tau.ac.il/~matias/courses/Seminar\_Spring03/topk-b.pdf$\backslash$nhttp://portal.acm.org/citation.cfm?doid=872757.872764},
year = {2003}
}
@inproceedings{Yu2005,
abstract = {Ranking-aware queries, or top-k queries, have received much attention recently in various contexts such as web, multimedia retrieval, relational databases, and distributed systems. Top-k queries play a critical role in many decision-making related activities such as, identifying interesting objects, network monitoring, load balancing, etc. In this paper, we study the ranking aggregation problem in distributed systems. Prior research addressing this problem did not take data distributions into account, simply assuming the uniform data distribution among nodes, which is not realistic for real data sets and is, in general, inefficient. In this paper, we propose three efficient algorithms that consider data distributions in different ways. Our extensive experiments demonstrate the advantages of our approaches in terms of bandwidth consumption. © Springer-Verlag Berlin Heidelberg 2005.},
author = {Yu, H and Li, H G and Wu, P and Agrawal, D and Abbadi, A E},
booktitle = {Database and Expert Systems Applications},
isbn = {03029743 (ISSN)},
issn = {03029743},
pages = {65--74},
title = {{Efficient processing of distributed top-k queries}},
year = {2005}
}
@inproceedings{Vlachou2008,
abstract = {Lately the advances in centralized database management systems show a trend towards supporting rank-aware query operators, like top-k, that enable users to retrieve only the most interesting data objects. A challenging problem is to support rank-aware queries in highly distributed environments. In this paper, we present a novel approach, called SPEERTO, for top-k query processing in large-scale peer-to-peer networks, where the dataset is horizontally distributed over the peers. Towards this goal, we explore the applicability of the skyline operator for efficiently routing top-k queries in a large super-peer network. Relying on a thresholding scheme, SPEERTO returns the exact results progressively to the user, while the number of queried super-peers and transferred data is minimized. Finally, we propose different variations of SPEERTO that allow balancing between transferred data volume and response time. Through simulations we demonstrate the feasibility of our approach.},
author = {Vlachou, Akrivi and Doulkeridis, Christos and N\o rv\aa g, Kjetil and Vazirgiannis, Michalis},
booktitle = {Proc. ACM SIGMOD Int. Conf. on Management of Data},
doi = {10.1145/1376616.1376692},
isbn = {9781605581026},
issn = {07308078},
keywords = {Distributed DBMS},
pages = {753--764},
title = {{On efficient top-k query processing in highly distributed environments}},
url = {http://doi.acm.org/10.1145/1376616.1376692$\backslash$npapers2://publication/uuid/89A88FDA-8A73-412E-842F-FC64F3B4FAD7},
year = {2008}
}
@inproceedings{Akbarinia2007,
abstract = {Distributed Hash Tables (DHTs) provide a scalable solution for data sharing in large scale distributed systems, e.g. P2P systems. However, they only provide good support for exact-match queries, and it is hard to support complex queries such as top-k queries. In this paper, we propose a family of algorithms which deal with efficient processing of top-k queries in DHTs. We evaluated the performance of our solution through implementation over a 64-node cluster and simulation. Our performance evaluation shows very good performance, in terms of communication cost and response time.},
author = {Akbarinia, Reza and Pacitti, Esther and Valduriez, Patrick},
booktitle = {EuroPar '07: Proceedings of the 13th European international conference on Parallel Processing},
doi = {10.1007/978-3-540-74466-5\_53},
isbn = {978-3-540-74465-8},
issn = {03029743},
pages = {489--502},
title = {{Processing Top-k Queries in Distributed Hash Tables}},
url = {http://portal.acm.org/citation.cfm?id=1421273},
year = {2007}
}

@inproceedings{Culhane2014,
 author = {Culhane, William and Jayaram, K. R. and Eugster, Patrick},
 title = {Fast, Expressive Top-k Matching},
 booktitle = {Proceedings of the 15th International Middleware Conference},
 series = {Middleware '14},
 year = {2014},
 isbn = {978-1-4503-2785-5},
 location = {Bordeaux, France},
 pages = {73--84},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/2663165.2663326},
 doi = {10.1145/2663165.2663326},
 acmid = {2663326},
 publisher = {ACM},
 address = {New York, NY, USA},
}

@inproceedings{Singh2004,
 author = {Singh, Sumeet and Estan, Cristian and Varghese, George and Savage, Stefan},
 title = {Automated Worm Fingerprinting},
 booktitle = {Proceedings of the 6th Conference on Symposium on Operating Systems Design \& Implementation - Volume 6},
 series = {OSDI'04},
 year = {2004},
 location = {San Francisco, CA},
 pages = {4--4},
 numpages = {1},
 url = {http://dl.acm.org/citation.cfm?id=1251254.1251258},
 acmid = {1251258},
 publisher = {USENIX Association},
 address = {Berkeley, CA, USA},
}

@article{Otey:TSMC:2004,
title = "Parallel and Distributed Methods for Incremental Frequent Itemset Mining",
journal = "IEEE Transactions on Systems, Man, and Cybernetics--Part B: Cybernetics",
volume = "34",
number = "6",
year = "2004",
author = "Matthew Eric Otey and Srinivasan Parthasarathy and Chao Wang and Adriano Veloso and Meira Jr., Wagner",
abstract = "Traditional methods for data mining typically make the assumption that the data is centralized, memory-resident, and static. This assumption is no longer tenable. Such methods waste computational and input/output (I/O) resources when data is dy- namic, and they impose excessive communication overhead when data is distributed. Efficient implementation of incremental data mining methods is, thus, becoming crucial for ensuring system scal- ability and facilitating knowledge discovery when data is dynamic and distributed. In this paper, we address this issue in the context of the important task of frequent itemset mining. We first present an efficient algorithm which dynamically maintains the required in- formation even in the presence of data updates without examining the entire dataset. We then show how to parallelize this incremental algorithm. We also propose a distributed asynchronous algorithm, which imposes minimal communication overhead for mining dis- tributed dynamic datasets. Our distributed approach is capable of generating local models (in which each site has a summary of its own database) as well as the global model of frequent itemsets (in which all sites have a summary of the entire database). This ability permits our approach not only to generate frequent itemsets, but also to generate high-contrast frequent itemsets, which allows one to examine how the data is skewed over different sites."
}

@incollection{Guerrieri:EuroPar:2014,
year={2014},
isbn={978-3-319-09872-2},
booktitle={Euro-Par 2014 Parallel Processing},
volume={8632},
series={Lecture Notes in Computer Science},
editor={Silva, Fernando and Dutra, Inês and Santos Costa, Vítor},
doi={10.1007/978-3-319-09873-9_23},
title={Top-k Item Identification on Dynamic and Distributed Datasets},
url={http://dx.doi.org/10.1007/978-3-319-09873-9_23},
publisher={Springer International Publishing},
author={Guerrieri, Alessio and Montresor, Alberto and Velegrakis, Yannis},
pages={270-281},
language={English}
}

@article{Sacha:2013:IFI:2459715.2459719,
 author = {Sacha, Jan and Montresor, Alberto},
 title = {Identifying Frequent Items in Distributed Data Sets},
 journal = {Computing},
 issue_date = {April     2013},
 volume = {95},
 number = {4},
 month = apr,
 year = {2013},
 issn = {0010-485X},
 pages = {289--307},
 numpages = {19},
 url = {http://dx.doi.org/10.1007/s00607-012-0220-1},
 doi = {10.1007/s00607-012-0220-1},
 acmid = {2459719},
 publisher = {Springer-Verlag New York, Inc.},
 address = {New York, NY, USA},
 keywords = {68M14, 68Q25, 68W15, 68W20, 68W25, 68W40, Aggregation, Decentralized, Distributed, Frequency, Gossip, Most-frequent},
} 


@article{Lahiri20101241,
title = "Identifying frequent items in a network using gossip",
journal = "Journal of Parallel and Distributed Computing ",
volume = "70",
number = "12",
pages = "1241 - 1253",
year = "2010",
note = "",
issn = "0743-7315",
doi = "http://dx.doi.org/10.1016/j.jpdc.2010.07.006",
url = "http://www.sciencedirect.com/science/article/pii/S0743731510001358",
author = "Bibudh Lahiri and Srikanta Tirthapura",
keywords = "Gossip",
keywords = "Frequent items",
keywords = "Sketch ",
abstract = "We present algorithms for identifying frequently occurring items in a large distributed data set. Our algorithms use gossip as the underlying communication mechanism, and do not rely on any central control, nor on an underlying network structure, such as a spanning tree. Instead, nodes repeatedly select a random partner and exchange data with that partner. If this process continues for a (short) period of time, the desired results are computed, with probabilistic guarantees on the accuracy. Our algorithm for identifying frequent items is built by layering a novel small space ‚Äúsketch‚Äù of data over a gossip-based data dissemination mechanism. We prove that the algorithm identifies the frequent items with high probability, and provides bounds on the time till convergence. To our knowledge, this is the first work on identifying frequent items using gossip. "
}

@inproceedings{Haridasan:2008:GDE:1855641.1855654,
 author = {Haridasan, Maya and van Renesse, Robbert},
 title = {Gossip-based Distribution Estimation in Peer-to-peer Networks},
 booktitle = {Proceedings of the 7th International Workshop on Peer-to-peer Systems},
 series = {IPTPS'08},
 year = {2008},
 location = {Tampa Bay, Florida},
 pages = {13--13},
 numpages = {1},
 url = {http://dl.acm.org/citation.cfm?id=1855641.1855654},
 acmid = {1855654},
 publisher = {USENIX Association},
 address = {Berkeley, CA, USA},
} 

@inproceedings{Brenna:2009:DES:1619258.1619263,
 author = {Brenna, Lars and Gehrke, Johannes and Hong, Mingsheng and Johansen, Dag},
 title = {Distributed Event Stream Processing with Non-deterministic Finite Automata},
 booktitle = {Proceedings of the Third ACM International Conference on Distributed Event-Based Systems},
 series = {DEBS '09},
 year = {2009},
 isbn = {978-1-60558-665-6},
 location = {Nashville, Tennessee},
 pages = {3:1--3:12},
 articleno = {3},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/1619258.1619263},
 doi = {10.1145/1619258.1619263},
 acmid = {1619263},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {NFA, continuous queries, event streams, publish-subscribe},
} 
@inproceedings{Hirzel:2012:PCP:2335484.2335506,
 author = {Hirzel, Martin},
 title = {Partition and Compose: Parallel Complex Event Processing},
 booktitle = {Proceedings of the 6th ACM International Conference on Distributed Event-Based Systems},
 series = {DEBS '12},
 year = {2012},
 isbn = {978-1-4503-1315-5},
 location = {Berlin, Germany},
 pages = {191--200},
 numpages = {10},
 url = {http://doi.acm.org/10.1145/2335484.2335506},
 doi = {10.1145/2335484.2335506},
 acmid = {2335506},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {CEP, SPL, automata, composite events, parallelism, pattern matching, regular expressions, stream processing},
} 


@inproceedings{Leonini2009,
author = {Leonini, Lorenzo and Rivi\`{e}re, \'{E}tienne and Felber, Pascal},
booktitle = {Symposium on Networked systems design and implementation},
pages = {185--198},
title = {{SPLAY: Distributed Systems Evaluation Made Simple}},
url = {http://www.usenix.org/event/nsdi09/tech/full\_papers/leonini/leonini.pdf},
year = {2009}
}

@inproceedings{Fagin:2003:CTK:644108.644113,
 author = {Fagin, Ronald and Kumar, Ravi and Sivakumar, D.},
 title = {Comparing Top K Lists},
 booktitle = {Proceedings of the Fourteenth Annual ACM-SIAM Symposium on Discrete Algorithms},
 series = {SODA '03},
 year = {2003},
 isbn = {0-89871-538-5},
 location = {Baltimore, Maryland},
 pages = {28--36},
 numpages = {9},
 url = {http://dl.acm.org/citation.cfm?id=644108.644113},
 acmid = {644113},
 publisher = {Society for Industrial and Applied Mathematics},
 address = {Philadelphia, PA, USA},
} 